{{  config(    
    materialized='incremental',    
    incremental_strategy='insert_overwrite',
    unique_key='PROCESSED_DT')
}}

with stg_src as (
    select BATCHLOADSTATS_COLLECTIONID as COLLECTION_ID,
    BATCHLOADSTATS_INSTSYMBOL as INST_SYMBOL_CD,
    BATCHLOADSTATS_INPUTFILENAME as INPUT_FILE_NM,
    to_date(to_char(BATCHLOADSTATS_DATEPROCESSED)) as PROCESSED_DT,
    BATCHLOADSTATS_LOCALSYSTEMID as LOCAL_SYSTEM_ID,
    BATCHLOADSTATS_DESELECTED AS DESELECTED_QY,
    BATCHLOADSTATS_DUPLICATEDROPPED as DUPLICATE_DROP_QY,
    BATCHLOADSTATS_ADDEDTOWORLDCATNOTINDEXED as ADDED_TO_WC_INDEXED_QY,
    BATCHLOADSTATS_ADDEDTOWORLDCATINDEXED as ADDED_TO_WC_NOT_INDEXED_QY,
    BATCHLOADSTATS_REPLACED as REPLACED_QY,
    BATCHLOADSTATS_IGNOREDREPLACE as IGNORED_REPLACED_QY,
    BATCHLOADSTATS_REJECTEDREPLACE as REJECTED_REPLACED_QY,
    BATCHLOADSTATS_ENRICHEDWORLDCAT as ENRICHED_WC_QY,
    BATCHLOADSTATS_DONOTMIGRATE as DO_NOT_MIGRATE_QY,
    BATCHLOADSTATS_SPARCERECORD as SPARSE_RECORD_QY,
    BATCHLOADSTATS_HOLDINGSET as HOLDINGS_SET_QY,
    BATCHLOADSTATS_HOLDINGALREADYSET as HOLDINGS_ALREADY_SET_QY,
    BATCHLOADSTATS_HOLDINGCANCELED as HOLDINGS_CANCELLED_QY,
    BATCHLOADSTATS_HOLDINGALREADYCANCELED as HOLDINGS_ALREADY_CANCELLED_QY,
    BATCHLOADSTATS_HOLDINGCANCELNOMATCH as HOLDINGS_CANCELLED_NO_MATCH_QY,
    BATCHLOADSTATS_TOTALRECORDS as TOTAL_RECORDS_QY,
    to_timestamp(to_char(BATCHLOADSTATS_DATEPROCESSED)) as CONVERTED_INPUT_FILE_TS
    from {{ source('DWDB01', 'PRESTG_BL_BIB_STATS_JSON_VW') }}
),

max_conv_file_ts as (
    select cust.customer_key,COLLECTION_ID,INST_SYMBOL_CD,GROUP_SYMBOL_CD,INPUT_FILE_NM,LOCAL_SYSTEM_ID,max(CONVERTED_INPUT_FILE_TS) as CONVERTED_INPUT_FILE_TS
    from stg_src, {{ ref('lkp_dw_customer') }} cust where stg_src.INST_SYMBOL_CD = cust.INST_SYMBOL_CD
    group by cust.customer_key,COLLECTION_ID,INST_SYMBOL_CD,GROUP_SYMBOL_CD,INPUT_FILE_NM,LOCAL_SYSTEM_ID
),

joined_max_input_file as (
    select ss.*, mcft.CONVERTED_INPUT_FILE_TS, case when mcft.CONVERTED_INPUT_FILE_TS is not null then 1 else 0 end as CONVERTED_INPUT_FILE_IN  
    from stg_src ss
    left join max_conv_file_ts mcft on 
    ss.customer_key = mcft.customer_key
    and ss.COLLECTION_ID = mcft.COLLECTION_ID 
    and ss.INST_SYMBOL_CD = mcft.INST_SYMBOL_CD
    and ss.GROUP_SYMBOL_CD = mcft.GROUP_SYMBOL_CD
    and ss.INPUT_FILE_NM = mcft.INPUT_FILE_NM
    and ss.LOCAL_SYSTEM_ID = mcft.LOCAL_SYSTEM_ID
)

select * from joined_max_input_file
{% if is_incremental() %}
  -- this filter will only be applied on an incremental run  
  where PROCESSED_DT >= (select max(PROCESSED_DT) from {{ this }})
{% endif %}
